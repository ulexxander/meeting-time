scalar Time

type Team {
  id: ID!
  name: String!
  createdAt: Time!
  updatedAt: Time
  schedules: [Schedule!]!
}

type Schedule {
  id: ID!
  teamId: ID!
  name: String!
  startsAt: Time!
  endsAt: Time!
  createdAt: Time!
  updatedAt: Time
}

type Meeting {
  id: ID!
  scheduleId: Int!
  startedAt: Time!
  endedAt: Time!
  createdAt: Time!
  updatedAt: Time
}

type Query {
  teamByID(id: ID!): Team
  scheduleByID(id: ID!): Schedule
  meetingByID(id: ID!): Meeting
}

input TeamCreate {
  name: String!
}

input ScheduleCreate {
  teamId: ID!
  name: String!
  startsAt: Time!
  endsAt: Time!
}

input MeetingCreate {
  scheduleId: ID!
  startedAt: Time!
  endedAt: Time!
}

type Mutation {
  teamCreate(input: TeamCreate!): ID!
  scheduleCreate(input: ScheduleCreate!): ID!
  meetingCreate(input: MeetingCreate!): ID!
}
